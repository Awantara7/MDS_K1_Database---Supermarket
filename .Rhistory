hc_tooltip(shared = TRUE) %>%
hc_credits(enabled = FALSE)
})
# Segmentasi Pelanggan
output$plot_demografi <- renderEcharts4r({
data <- load_data()
if(nrow(data) == 0){
return(e_charts() %>% e_title("Tidak ada data"))
}
demografi_data <- data %>%
group_by(Jenis_Kelamin) %>%
summarise(Jumlah = n(), .groups = "drop")
demografi_data %>%
e_charts(Jenis_Kelamin) %>%
e_pie(Jumlah, radius = "50%") %>%
e_title("Demografi Pelanggan (Jenis Kelamin)") %>%
e_tooltip(trigger = "item") %>%
e_legend(orient = "vertical", left = "left")
})
output$plot_jenis_pelanggan <- renderEcharts4r({
data <- load_data()
if(nrow(data) == 0){
return(e_charts() %>% e_title("Tidak ada data"))
}
jenis_data <- data %>%
group_by(Jenis_Pelanggan) %>%
summarise(Jumlah = n(), .groups = "drop")
jenis_data %>%
e_charts(Jenis_Pelanggan) %>%
e_bar(Jumlah, name = "Jumlah") %>%
e_title("Segmentasi Jenis Pelanggan") %>%
e_tooltip(trigger = "axis") %>%
e_legend(show = FALSE)
})
output$plot_tipe_pelanggan <- renderEcharts4r({
data <- load_data()
if(nrow(data) == 0){
return(e_charts() %>% e_title("Tidak ada data"))
}
tipe_data <- data %>%
group_by(Tipe_Pelanggan) %>%
summarise(Jumlah = n(), .groups = "drop")
tipe_data %>%
e_charts(Tipe_Pelanggan) %>%
e_bar(Jumlah, name = "Jumlah") %>%
e_title("Segmentasi Tipe Pelanggan") %>%
e_tooltip(trigger = "axis") %>%
e_legend(show = FALSE)
})
output$plot_jenis_pembayaran <- renderEcharts4r({
data <- load_data()
if(nrow(data) == 0){
return(e_charts() %>% e_title("Tidak ada data"))
}
bayar_data <- data %>%
group_by(Pembayaran) %>%
summarise(Jumlah = n(), .groups = "drop")
bayar_data %>%
e_charts(Pembayaran) %>%
e_pie(Jumlah, radius = "50%") %>%
e_title("Segmentasi Jenis Pembayaran") %>%
e_tooltip(trigger = "item") %>%
e_legend(orient = "vertical", left = "left")
})
output$rfm_analysis <- renderHighchart({
data <- load_data()
if(nrow(data) == 0){
return(highchart() %>% hc_title(text = "Tidak ada data"))
}
now <- Sys.Date()
rfm_data <- data %>%
group_by(ID_Pelanggan) %>%
summarise(
Recency = as.numeric(difftime(now, as.Date(Tanggal), units = "days")),
Frequency = n(),
Monetary = sum(as.numeric(Total), na.rm = TRUE),
.groups = "drop"
)
if(all(is.na(rfm_data$Recency))){
rfm_data$Recency <- 0
}
highchart() %>%
hc_add_series(data = rfm_data, type = "scatter",
hcaes(x = Recency, y = Frequency, size = Monetary)) %>%
hc_title(text = "RFM Analysis") %>%
hc_xAxis(title = list(text = "Recency (Hari)")) %>%
hc_yAxis(title = list(text = "Frequency")) %>%
hc_tooltip(pointFormat = "Recency: {point.x}<br>Frequency: {point.y}<br>Monetary: {point.Monetary}") %>%
hc_credits(enabled = FALSE)
})
output$plot_omzet_cabang <- renderEcharts4r({
data <- load_data()
if(nrow(data) == 0){
return(e_charts() %>% e_title("Tidak ada data"))
}
cabang_data <- data %>%
group_by(ID_Cabang) %>%
summarise(Omzet = sum(as.numeric(Total), na.rm = TRUE), .groups = "drop") %>%
arrange(desc(Omzet))
cabang_data %>%
e_charts(ID_Cabang) %>%
e_bar(Omzet, name = "Omzet") %>%
e_title("Omzet per Cabang") %>%
e_tooltip(trigger = "axis") %>%
e_flip_coords() %>%
e_legend(show = FALSE)
})
output$plot_cabang_performa <- renderEcharts4r({
data <- load_data()
if(nrow(data) == 0){
return(e_charts() %>% e_title("Tidak ada data"))
}
cabang_performance <- data %>%
group_by(ID_Cabang) %>%
summarise(Omzet = sum(as.numeric(Total), na.rm = TRUE), .groups = "drop") %>%
arrange(desc(Omzet))
best_branch <- cabang_performance %>% slice(1)
worst_branch <- cabang_performance %>% slice(n())
combined <- rbind(best_branch, worst_branch)
combined %>%
e_charts(ID_Cabang) %>%
e_bar(Omzet, name = "Omzet") %>%
e_title("Cabang Terbaik & Terburuk") %>%
e_tooltip(trigger = "axis") %>%
e_flip_coords() %>%
e_legend(show = FALSE)
})
output$map_cabang <- renderLeaflet({
cabang_coords <- tbl_cabang %>% collect()
cabang_map <- left_join(cabang_coords, city_coords, by = "Kota")
leaflet(cabang_map) %>%
addProviderTiles(providers$OpenStreetMap) %>%
addMarkers(
~lon, ~lat,
popup = ~paste0("<b>", ID_Cabang, "</b><br>Kota: ", Kota)
)
})
observeEvent(input$update_password, {
showModal(modalDialog(
title = "Password Updated",
"Password Anda telah berhasil diubah.",
easyClose = TRUE,
footer = NULL
))
})
observeEvent(input$save_preferences, {
showNotification("Preferensi Anda telah disimpan.", type = "message")
})
observe({
data <- load_data()
total_penjualan <- sum(convert_total(data$Total), na.rm = TRUE)
if(total_penjualan > 100000000){
showNotification("Penjualan hari ini melebihi 100 juta!", type = "message")
}
})
onStop(function() {
dbDisconnect(con)
})
}
secure_ui <- secure_app(ui)
shinyApp(secure_ui, server)
library(shiny)
library(shinythemes)
library(shinyWidgets)
library(shinydashboard)
library(DBI)
library(RMariaDB)
library(dplyr)
library(dbplyr)
library(ggplot2)
library(plotly)
library(DT)
library(leaflet)
library(ggmap)
library(tidygeocoder)
# app.R
library(shiny)
library(bs4Dash)
library(shinymanager)
library(shinyWidgets)
library(highcharter)
library(echarts4r)
library(DT)
library(leaflet)
library(dplyr)
library(DBI)
library(RMariaDB)
library(glue)
library(shinyjs)
# Fungsi konversi nilai Total (jika data masih berupa karakter)
convert_total <- function(x) {
as.numeric(gsub("[^0-9.-]", "", x))
}
# Data kredensial (contoh: tambah akun wawan)
credentials <- data.frame(
user = c("admin", "user1", "wawan"),
password = c("admin123", "user123", "wawan"),
stringsAsFactors = FALSE
)
# Tema warna
theme_colors <- list(
primary = "#005BAC",
secondary = "#FF6F00",
accent = "#F5F5F5",
bg_light = "#FFFFFF",
text_dark = "#333333"
)
# UI -------------------------------------------------------------------------
ui <- bs4DashPage(
title = "WA-ONE SWALAYAN",
header = bs4DashNavbar(
skin = "light",
status = "white",
brand = bs4DashBrand(
title = "WA-ONE SWALAYAN",
color = "primary",
href = "#"
),
compact = FALSE
),
sidebar = bs4DashSidebar(
skin = "light",
status = "primary",
title = "Menu",
brandColor = "primary",
collapsed = FALSE,
bs4SidebarMenu(
bs4SidebarMenuItem("Dashboard Penjualan", tabName = "penjualan", icon = icon("chart-line")),
bs4SidebarMenuItem("Produk & Kategori", tabName = "produk", icon = icon("box")),
bs4SidebarMenuItem("Segmentasi Pelanggan", tabName = "pelanggan", icon = icon("users")),
bs4SidebarMenuItem("Performa Cabang", tabName = "cabang", icon = icon("store")),
bs4SidebarMenuItem("Data Quality", tabName = "dataquality", icon = icon("exclamation-triangle")),
bs4SidebarMenuItem("Pengaturan", tabName = "settings", icon = icon("cogs")),
bs4SidebarMenuItem("About Dashboard", tabName = "about", icon = icon("info-circle"))
)
),
body = bs4DashBody(
useShinyjs(),
tags$head(
# Memanggil font Google dan custom CSS
tags$link(rel = "stylesheet", href = "https://fonts.googleapis.com/css?family=Roboto&display=swap"),
tags$style(HTML("
body {font-family: 'Roboto', sans-serif;}
.main-header {background-color: #005BAC;}
.main-sidebar {background-color: #FFFFFF;}
/* Custom styling untuk kartu kontributor */
.contributor-card {
background-color: #f8f9fa;
border: 1px solid #ddd;
border-radius: 10px;
padding: 15px;
margin: 10px;
box-shadow: 2px 2px 5px rgba(0,0,0,0.1);
}
.contributor-img {
border-radius: 50%;
margin-bottom: 10px;
}
"))
),
bs4TabItems(
# Tab: Dashboard Penjualan
bs4TabItem(
tabName = "penjualan",
fluidRow(
bs4ValueBoxOutput("total_penjualan", width = 3),
bs4ValueBoxOutput("performacabang", width = 3),
bs4ValueBoxOutput("produk_terjual", width = 3),
bs4ValueBoxOutput("total_transaksi", width = 3)
),
fluidRow(
bs4Card(
title = "Total Penjualan per Waktu per Kategori", width = 12,
highchartOutput("plot_penjualan", height = "400px")
)
),
fluidRow(
bs4Card(
title = "Produk Terlaris", width = 12,
echarts4rOutput("plot_produk_terlaris", height = "400px")
)
),
fluidRow(
bs4Card(
title = "Frekuensi Belanja Pelanggan", width = 12,
highchartOutput("plot_frekuensi_belanja", height = "400px")
)
),
fluidRow(
bs4Card(
title = "Peta Penjualan per Kota", width = 12,
leafletOutput("peta_penjualan", height = "400px")
)
),
fluidRow(
bs4Card(
title = "Data Transaksi", width = 12,
DTOutput("table_transaksi")
)
)
),
# Tab: Produk & Kategori
bs4TabItem(
tabName = "produk",
fluidRow(
bs4Card(
title = "Distribusi Penjualan per Kategori", width = 6,
echarts4rOutput("pie_kategori", height = "400px")
),
bs4Card(
title = "Perbandingan Penjualan Antar Produk", width = 6,
echarts4rOutput("bar_produk", height = "400px")
)
),
fluidRow(
bs4Card(
title = "Tren Penjualan Produk", width = 12,
highchartOutput("tren_produk", height = "400px")
)
)
),
# Tab: Segmentasi Pelanggan
bs4TabItem(
tabName = "pelanggan",
fluidRow(
bs4Card(
title = "Demografi Pelanggan (Jenis Kelamin)", width = 6,
echarts4rOutput("plot_demografi", height = "400px")
),
bs4Card(
title = "RFM Analysis", width = 6,
highchartOutput("rfm_analysis", height = "400px")
)
),
fluidRow(
bs4Card(
title = "Segmentasi Jenis Pelanggan", width = 4,
echarts4rOutput("plot_jenis_pelanggan", height = "400px")
),
bs4Card(
title = "Segmentasi Tipe Pelanggan", width = 4,
echarts4rOutput("plot_tipe_pelanggan", height = "400px")
),
bs4Card(
title = "Segmentasi Jenis Pembayaran", width = 4,
echarts4rOutput("plot_jenis_pembayaran", height = "400px")
)
)
),
# Tab: Performa Cabang
bs4TabItem(
tabName = "cabang",
fluidRow(
bs4Card(
title = "Omzet per Cabang", width = 6,
echarts4rOutput("plot_omzet_cabang", height = "400px")
),
bs4Card(
title = "Cabang Terbaik & Terburuk", width = 6,
echarts4rOutput("plot_cabang_performa", height = "400px")
)
),
fluidRow(
bs4Card(
title = "Peta Cabang", width = 12,
leafletOutput("map_cabang", height = "400px")
)
)
),
# Tab: Data Quality
bs4TabItem(
tabName = "dataquality",
fluidRow(
bs4Card(
title = "Data Lengkap", width = 12,
DTOutput("table_full")
)
),
fluidRow(
bs4Card(
title = "Data Inconsistency", width = 12,
DTOutput("table_error")
)
)
),
# Tab: Pengaturan
bs4TabItem(
tabName = "settings",
h2("Pengaturan Aplikasi"),
fluidRow(
bs4Card(
title = "Ubah Password", width = 6,
passwordInput("old_password", "Password Lama"),
passwordInput("new_password", "Password Baru"),
actionButton("update_password", "Update Password", class = "btn btn-primary")
),
bs4Card(
title = "Preferensi", width = 6,
checkboxInput("dark_mode", "Mode Gelap"),
checkboxInput("notif_email", "Terima Notifikasi via Email"),
actionButton("save_preferences", "Simpan Preferensi", class = "btn btn-success")
)
)
),
# Tab: About Dashboard
bs4TabItem(
tabName = "about",
h2("Tentang Dashboard WA-ONE SWALAYAN"),
fluidRow(
bs4Card(
title = "Deskripsi Dashboard", width = 12,
"Dashboard ini dirancang untuk memantau performa penjualan, produk, pelanggan, dan cabang dengan visualisasi data yang interaktif dan informatif."
)
),
fluidRow(
bs4Card(
title = "Kontributor",
width = 12,
fluidRow(
column(
width = 4,
align = "center",
tags$div(
class = "contributor-card",
tags$img(src = "https://raw.githubusercontent.com/Awantara7/MDS_K1_Database---Supermarket/64bd08985f540880822d3d34cab26c3af01d36be/images/front_end.jpg",
class = "contributor-img", height = "150px"),
tags$h4("Front-End Developer"),
tags$p("Nama: Muh. Akbar Idris"),
tags$p("NIM: M0501241013"),
tags$p(a(href = "https://instagram.com/muh.akbar.idris", "IG : @muh.akbar.idris", target = "_blank")),
tags$p(a(href = "https://github.com/muhakbaridris", "Github : muhakbaridris", target = "_blank"))
)
),
column(
width = 4,
align = "center",
tags$div(
class = "contributor-card",
tags$img(src = "https://raw.githubusercontent.com/Awantara7/MDS_K1_Database---Supermarket/64bd08985f540880822d3d34cab26c3af01d36be/images/back_end.jpg?=v2",
class = "contributor-img", height = "150px"),
tags$h4("Back-End Developer"),
tags$p("Nama: I Gede Awantara"),
tags$p("NIM: M0501241004"),
tags$p(a(href = "https://instagram.com/igedeawantara", "IG : @igedeawantara", target = "_blank")),
tags$p(a(href = "https://github.com/awantara7", "Github : awantara7", target = "_blank"))
)
),
column(
width = 4,
align = "center",
tags$div(
class = "contributor-card",
tags$img(src = "https://raw.githubusercontent.com/Awantara7/MDS_K1_Database---Supermarket/64bd08985f540880822d3d34cab26c3af01d36be/images/db_manager.jpg",
class = "contributor-img", height = "150px"),
tags$h4("DB-Manager"),
tags$p("Nama: Wawan Saputra"),
tags$p("NIM: M0501241017"),
tags$p(a(href = "https://instagram.com/w2nspt_", "IG : @w2nspt_", target = "_blank")),
tags$p(a(href = "https://github.com/wawan2105", "Github : wawan2105", target = "_blank"))
)
)
),
fluidRow(
column(
width = 4,
offset = 2,
align = "center",
tags$div(
class = "contributor-card",
tags$img(src = "https://raw.githubusercontent.com/Awantara7/MDS_K1_Database---Supermarket/64bd08985f540880822d3d34cab26c3af01d36be/images/designer_db.jpg",
class = "contributor-img", height = "150px"),
tags$h4("Designer-DB"),
tags$p("Nama: Lisa Amelia"),
tags$p("NIM: M0501241082"),
tags$p(a(href = "https://instagram.com/amllsaa", "IG : @amllsaa", target = "_blank")),
tags$p(a(href = "https://github.com/lisaamelia", "Github : lisaamelia", target = "_blank"))
)
),
column(
width = 4,
align = "center",
tags$div(
class = "contributor-card",
tags$img(src = "https://raw.githubusercontent.com/Awantara7/MDS_K1_Database---Supermarket/64bd08985f540880822d3d34cab26c3af01d36be/images/technical_writer.jpg",
class = "contributor-img", height = "150px"),
tags$h4("Technical-Writer"),
tags$p("Nama: Nabila Fida Millati"),
tags$p("NIM: M0501241087"),
tags$p(a(href = "https://instagram.com/nabilafida", "IG : @nabilafida", target = "_blank")),
tags$p(a(href = "https://github.com/nabilafida", "Github : nabilafida", target = "_blank"))
)
)
)
)
)
)
)
),
controlbar = bs4DashControlbar(
skin = "light",
title = "Filter Data",
collapsed = TRUE,
selectInput("select_year", "Pilih Tahun:", choices = as.character(2018:2023), selected = format(Sys.Date(), "%Y")),
pickerInput("select_produk", "Pilih Produk:", choices = NULL, multiple = TRUE),
actionButton("apply_filters", "Terapkan Filter")
),
footer = bs4DashFooter(
left = "WA-ONE SWALAYAN © 2023",
right = "Powered by R & Shiny"
)
)
# -------------------------------------------------------------------------
