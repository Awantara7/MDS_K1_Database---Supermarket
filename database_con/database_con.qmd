---
title: "Data Base_Connection"
format: html
editor: visual
---

## Langkah 1: Instalasi dan Panggil Paket yang Diperlukan

```{r}
install.packages("DBI")          # Untuk koneksi ke database
install.packages("RMariaDB")      # Driver MariaDB/MySQL untuk R
install.packages("readr")         # Untuk membaca file CSV
install.packages("glue")          # Untuk memudahkan string SQL
install.packages("dplyr")         # Untuk manipulasi data
install.packages("tidyverse")     # Kumpulan paket untuk analisis data
```

```{r}
library(DBI)
library(RMariaDB)
library(readr)
library(glue)
library(dplyr)
library(tidyverse)

```

## Langkah 2: Koneksi ke MySQL & Membuat Database

```{r}
# Konfigurasi koneksi ke MySQL
db_config <- list(
  host = "127.0.0.1",  
  port = 3307,         # Sesuaikan dengan port MySQL di DBngin
  user = "root",
  password = "",
  dbname = "data_csv"
)

# Buat koneksi tanpa database terlebih dahulu
con <- dbConnect(MariaDB(),
                 host = db_config$host,
                 port = db_config$port,
                 user = db_config$user,
                 password = "")

# Buat database jika belum ada
dbExecute(con, glue("CREATE DATABASE IF NOT EXISTS {db_config$dbname}"))
dbExecute(con, glue("USE {db_config$dbname}"))

# Tutup koneksi sementara
dbDisconnect(con)
```

## Langkah 3: Buat Tabel di MySQL

```{r}
# Buka koneksi dengan database yang telah dibuat
con <- dbConnect(MariaDB(),
                 host = db_config$host,
                 port = db_config$port,
                 user = db_config$user,
                 password = "",
                 dbname = db_config$dbname)

# 1. Tabel Cabang
dbExecute(con, "
    CREATE TABLE IF NOT EXISTS cabang (
        ID_Cabang VARCHAR(10) PRIMARY KEY,
        ID_Produk VARCHAR(10),
        Kota VARCHAR(50)
    )
")

# 2. Tabel Produk
dbExecute(con, "
    CREATE TABLE IF NOT EXISTS produk (
        ID_Produk VARCHAR(10) PRIMARY KEY,
        Kategori_Produk VARCHAR(50),
        Harga_Satuan DECIMAL(10,2),
        Kuantitas INT,
        Total_Harga DECIMAL(10,2),
        ID_Cabang VARCHAR(10),
        FOREIGN KEY (ID_Cabang) REFERENCES cabang(ID_Cabang) ON DELETE CASCADE
    )
")

# 3. Tabel Pelanggan
dbExecute(con, "
    CREATE TABLE IF NOT EXISTS pelanggan (
        ID_Pelanggan VARCHAR(10) PRIMARY KEY,
        Tipe_Pelanggan ENUM('Member', 'Normal'),
        Jenis_Kelamin ENUM('Laki-laki', 'Perempuan')
    )
")

# 4. Tabel Invoice
dbExecute(con, "
    CREATE TABLE IF NOT EXISTS invoice (
        ID_Invoice VARCHAR(20) PRIMARY KEY,
        ID_Produk VARCHAR(10),
        ID_Cabang VARCHAR(10),
        ID_Pelanggan VARCHAR(10),
        Total DECIMAL(10,2),
        Tanggal DATE,
        Waktu TIME,
        Pembayaran ENUM('Ewallet', 'Cash', 'Credit card'),
        Penilaian DECIMAL(3,1),  -- Memperbesar kapasitas dari 2,1 ke 3,1
        FOREIGN KEY (ID_Produk) REFERENCES produk(ID_Produk) ON DELETE CASCADE,
        FOREIGN KEY (ID_Cabang) REFERENCES cabang(ID_Cabang) ON DELETE CASCADE,
        FOREIGN KEY (ID_Pelanggan) REFERENCES pelanggan(ID_Pelanggan) ON DELETE CASCADE
    )
")

# Konfirmasi jika semua tabel sudah dibuat
dbListTables(con)
```

## Langkah 4: Membaca dan Memasukkan Data CSV ke MySQL

```{r}
# 1. Baca dan Masukkan Data Cabang
data_cabang <- read_delim("data/cabang.csv", delim = ";")
dbWriteTable(con, "cabang", data_cabang, append = TRUE, row.names = FALSE)

# 2. Baca dan Masukkan Data Produk
data_produk <- read_delim("data/produk.csv", delim = ";")

# Perbaiki format angka dengan menghapus titik pemisah ribuan
data_produk <- data_produk %>%
  mutate(
    Total_Harga = as.numeric(gsub("\\.", "", Total_Harga))
  )

dbWriteTable(con, "produk", data_produk, append = TRUE, row.names = FALSE)

# 3. Baca dan Masukkan Data Pelanggan
data_pelanggan <- read_delim("data/pelanggan.csv", delim = ";")
dbWriteTable(con, "pelanggan", data_pelanggan, append = TRUE, row.names = FALSE)

# 4. Baca dan Masukkan Data Invoice
data_invoice <- read_delim("data/invoice.csv", delim = ";")

# Perbaiki format angka dengan menghapus titik pemisah ribuan
data_invoice <- data_invoice %>%
  mutate(
    Total = as.numeric(gsub("\\.", "", Total))
  )

# Konversi tanggal ke format yang sesuai
data_invoice <- data_invoice %>%
  mutate(Tanggal = as.Date(Tanggal, format = "%m/%d/%Y"))

dbWriteTable(con, "invoice", data_invoice, append = TRUE, row.names = FALSE)
```

## Langkah 5: Verifikasi Data dalam Database

```{r}
# Cek apakah tabel tersedia di database
dbListTables(con)
```

```{r}
# Cek contoh data
dbGetQuery(con, "SELECT * FROM invoice LIMIT 5")
```

```{r}
# Cek struktur tabel setelah perubahan
dbGetQuery(con, "DESCRIBE cabang")
dbGetQuery(con, "DESCRIBE produk")
dbGetQuery(con, "DESCRIBE pelanggan")
dbGetQuery(con, "DESCRIBE invoice")
```

```{r}
# Load tabel dari database
tbl_cabang <- dbGetQuery(con, "SELECT * FROM cabang")
tbl_invoice <- dbGetQuery(con, "SELECT * FROM invoice")
tbl_pelanggan <- dbGetQuery(con, "SELECT * FROM pelanggan")
tbl_produk <- dbGetQuery(con, "SELECT * FROM produk")
```

```{r}
print(tbl_cabang)
print(tbl_invoice)
print(tbl_pelanggan)
print(tbl_produk)
```
